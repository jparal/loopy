"""An example of sampling/interpolating equatorial plane from MHD.

This example illustrates following:
* Iterate over MHD files
* Interpolate variables stored inside of MHD file (B,E,et.)
* Save the state by calling loopy.io.writehdf5()
"""
from __future__ import division, print_function, absolute_import

from IPython.parallel import Client
from scipy.interpolate import griddata
from os.path import exists
import tables as pytab
import time
import loopy as lpy
from loopy.codes import ltr
from loopy.io import readhdf5, writehdf5

######################################################################
dbeg = [2012, 10, 7] # [2012, 10, 7, 4] (LM_OMNI)
dend = [2012, 10, 7, 0, 2] # dend = [2013, 3, 18]
step = 30 # (sec)

prefix = '../dat/baker'
oname = '../tmp/sample_mpause_lm.h5'

#prefix = '../dat/LR_OMNI_dt30/07-10Oct2012_lfmrcm'
#oname = '../tmp/sample_eqplane_lr.h5'


if exists(oname):
    print('Loading previous state from: %s' % oname)
    dat = readhdf5(oname)
    dbeg = dat._dend
    skip = 1
else:
    dat=lpy.types.struct()
    dat.dbeg = dbeg
    skip = 0

dat.dend = dend
dat.step = step
dat._dend = dend
dat.radrng = arange(3,14,0.1, dtype=float32)
dat.phirng = linspace(0, 2*pi, 25)

sim = ltr.FileIter(prefix, dbeg, dend, step, itskip=skip)

def interpolate_mhd(mhd):
    import loopy as lpy
    import numpy as np
    radrng = np.arange(3,14,0.1, dtype=np.float32)
    phirng = np.linspace(0, 2*np.pi, 25)

    dat = lpy.struct()
    esph = mhd.cart2sph(mhd.E)
    dat.Bz = mhd.interp(mhd.B.z, radrng, phirng, 0, coords='rpz').squeeze()
    dat.Ephi = mhd.interp(esph.phi, radrng, phirng, 0, coords='rpz').squeeze()
    dat.Erad = mhd.interp(esph.rad, radrng, phirng, 0, coords='rpz').squeeze()
    return dat

## Parallel asynchronous version
client = Client()
view = client.load_balanced_view()
#view = client[:]
# Push the variables
#view['xyzmesh'] = xyzmesh
retval = view.map_async(interpolate_mhd, sim, chunksize=5)
retval.wait_interactive()
retval.get()
client.close()

## Or for testing purposes: a serial version
# retval = map(interpolate_mhd, sim)

Bz = array( [d.Bz for d in retval] )
Ephi = array( [d.Ephi for d in retval] )
Erad = array( [d.Erad for d in retval] )

dat.Bz = concatenate([dat.Bz, Bz]) if 'Bz' in dat else Bz
dat.Ephi = concatenate([dat.Ephi, Ephi]) if 'Ephi' in dat else Ephi
dat.Erad = concatenate([dat.Erad, Erad]) if 'Erad' in dat else Erad

writehdf5(oname, dat, backup=True)
